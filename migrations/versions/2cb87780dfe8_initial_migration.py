"""Initial migration

Revision ID: 2cb87780dfe8
Revises: 
Create Date: 2025-02-07 15:17:42.426330

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '2cb87780dfe8'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('users')
    with op.batch_alter_table('scan_details', schema=None) as batch_op:
        batch_op.alter_column('scan_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.drop_constraint('scan_details_scan_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'scan_results', ['scan_id'], ['id'])

    with op.batch_alter_table('vulnerabilities', schema=None) as batch_op:
        batch_op.alter_column('scan_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.drop_constraint('vulnerabilities_scan_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'scan_results', ['scan_id'], ['id'])

    with op.batch_alter_table('vulnerability_comments', schema=None) as batch_op:
        batch_op.alter_column('vulnerability_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.drop_constraint('vulnerability_comments_vulnerability_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'vulnerabilities', ['vulnerability_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('vulnerability_comments', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('vulnerability_comments_vulnerability_id_fkey', 'vulnerabilities', ['vulnerability_id'], ['id'], ondelete='CASCADE')
        batch_op.alter_column('vulnerability_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('vulnerabilities', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('vulnerabilities_scan_id_fkey', 'scan_results', ['scan_id'], ['id'], ondelete='CASCADE')
        batch_op.alter_column('scan_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('scan_details', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('scan_details_scan_id_fkey', 'scan_results', ['scan_id'], ['id'], ondelete='CASCADE')
        batch_op.alter_column('scan_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    op.create_table('users',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('email', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('password_hash', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    sa.UniqueConstraint('email', name='users_email_key')
    )
    # ### end Alembic commands ###
